{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","$resource","id","update","method","UsersIndexController","usersIndex","all","query","UsersShowController","deleteUser","usersShow","$remove","get","params","delete","isAuthenicated","UsersEditController","usersEdit","$update","angular","module","constant","config","$inject","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n  // function authenticate(provider) {\n  //   $auth.authenticate(provider)\n  //     .then((res) => {\n  //       console.log(res);\n  //     });\n  // }\n\n  login.submit = submit;\n  // login.authenticate =authenticate;\n}\n","angular.module('finalProject')\n  .controller( 'MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  const protectedStates = ['usersEdit', 'usersShow'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() &&  protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message= 'You must be logged in to go there!';\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenicated;\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}
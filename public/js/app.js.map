{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/directives/googleMap.js","js/directives/googlePlace.js","js/controllers/main.js","js/router.js","js/models/stop.js","js/controllers/stops.js","js/models/user.js","js/controllers/users.js","js/models/walk.js","js/controllers/walks.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","link","$scope","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","googleMap","$window","template","stop","map","google","maps","Map","center","lat","lng","zoom","scrollwheel","minZoom","styles","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","$watch","place","latLng","Marker","position","setCenter","googlePlace","options","types","componentRestrictions","country","autocomplete","places","Autocomplete","addListener","getPlace","geometry","location","toJSON","google_place_id","place_id","place_name","name","MainController","$rootScope","logout","secureState","toState","main","message","isAuthenticated","protectedStates","includes","toggleMenu","console","log","menuVisible","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","controller","otherwise","Stop","$resource","id","update","method","StopsIndexController","stopsIndex","all","query","StopsShowController","deleteStop","stopsShow","$remove","get","params","delete","isAuthenicated","StopsNewController","create","save","stopsNew","StopsEditController","stopsEdit","$update","User","UsersIndexController","usersIndex","UsersShowController","deleteUser","usersShow","UsersEditController","usersEdit","Walk","WalksIndexController","walksIndex","WalksShowController","deleteWalk","walksShow","walk","WalksNewController","walksNew","WalksEditController","walksEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n  // function authenticate(provider) {\n  //   $auth.authenticate(provider)\n  //     .then((res) => {\n  //       console.log(res);\n  //     });\n  // }\n\n  login.submit = submit;\n  // login.authenticate =authenticate;\n}\n","angular.module('finalProject')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n      element\n        .on('dragover', () => {\n          $scope.active= true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active= false;\n          $scope.$apply();\n        })\n        .on('drop', (e) => {\n          e.preventDefault();\n\n          const file = (e.target.files || e.dataTransfer.files)[0];\n\n          reader.readAsDataURL(file);\n        });\n    }\n\n  };\n}\n","angular.module('finalProject')\n.directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\">Google map here!</div>',\n    scope: {\n      stop: '='\n    },\n    link: function($scope, element) {\n\n      const map = new $window.google.maps.Map(element[0], {\n        center: { lat: 51.474191, lng: -0.0713257 },\n        zoom: 15,\n        scrollwheel: false,\n        minZoom: 3,\n        styles: [\n          {\n            'featureType': 'all',\n            'elementType': 'labels.text.fill',\n            'stylers': [\n              {\n                'saturation': 36\n              },\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 40\n              }\n            ]\n          },\n          {\n            'featureType': 'all',\n            'elementType': 'labels.text.stroke',\n            'stylers': [\n              {\n                'visibility': 'on'\n              },\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 16\n              }\n            ]\n          },\n          {\n            'featureType': 'all',\n            'elementType': 'labels.icon',\n            'stylers': [\n              {\n                'visibility': 'off'\n              }\n            ]\n          },\n          {\n            'featureType': 'administrative',\n            'elementType': 'geometry.fill',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 20\n              }\n            ]\n          },\n          {\n            'featureType': 'administrative',\n            'elementType': 'geometry.stroke',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              },\n              {\n                'weight': 1.2\n              }\n            ]\n          },\n          {\n            'featureType': 'landscape',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 20\n              }\n            ]\n          },\n          {\n            'featureType': 'poi',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 21\n              }\n            ]\n          },\n          {\n            'featureType': 'road.highway',\n            'elementType': 'geometry.fill',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              }\n            ]\n          },\n          {\n            'featureType': 'road.highway',\n            'elementType': 'geometry.stroke',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 29\n              },\n              {\n                'weight': 0.2\n              }\n            ]\n          },\n          {\n            'featureType': 'road.arterial',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 18\n              }\n            ]\n          },\n          {\n            'featureType': 'road.local',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 16\n              }\n            ]\n          },\n          {\n            'featureType': 'transit',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 19\n              }\n            ]\n          },\n          {\n            'featureType': 'water',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              }\n            ]\n          }\n        ]\n\n      });\n\n      $scope.$watch('stop.$resolved', () => {\n        if($scope.stop.place) {\n          const latLng = {\n            lat: $scope.stop.place.lat,\n            lng: $scope.stop.place.lng\n          };\n\n          new $window.google.maps.Marker({\n            position: latLng,\n            map: map\n          });\n\n          map.setCenter(latLng);\n        }\n      });\n\n    }\n  };\n}\n","angular.module('finalProject')\n.directive('googlePlace', googlePlace);\n\ngooglePlace.$inject = ['$window'];\n\nfunction googlePlace($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      stop: '='\n    },\n    link: function($scope, element) {\n      const options = {\n        types: [],\n        componentRestrictions: { country: 'GB' }\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n\n\n        $scope.stop.lat = latLng.lat;\n        $scope.stop.lng = latLng.lng;\n        $scope.stop.google_place_id = place.place_id;\n        $scope.stop.place_name = place.name;\n        // $scope.place.rating = place.rating;\n        // $scope.place.website = place.website;\n\n        $scope.$apply();\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .controller( 'MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  main.logout = logout;\n\n  const protectedStates = ['usersEdit', 'usersShow'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    if(!$auth.isAuthenticated() &&  protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message= 'You must be logged in to go there!';\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.menuVisible = false;\n\n  function toggleMenu() {\n    console.log('clicked');\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n\n  main.toggleMenu = toggleMenu;\n\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('walksIndex', {\n      url: '/walks',\n      templateUrl: '/templates/walksIndex.html',\n      controller: 'WalksIndexController as walksIndex'\n    })\n    .state('walksNew', {\n      url: '/walks/new',\n      templateUrl: '/templates/walksNew.html',\n      controller: 'WalksNewController as walksNew'\n    })\n    .state('walksShow', {\n      url: '/walks/:id',\n      templateUrl: '/templates/walksShow.html',\n      controller: 'WalksShowController as walksShow'\n    })\n    .state('walksEdit', {\n      url: '/walks/:id/edit',\n      templateUrl: '/templates/walksEdit.html',\n      controller: 'WalksEditController as walksEdit'\n    })\n    .state('stopsIndex', {\n      url: '/stops',\n      templateUrl: '/templates/stopsIndex.html',\n      controller: 'StopsIndexController as stopsIndex'\n    })\n    .state('stopsNew', {\n      url: '/stops/new',\n      templateUrl: '/templates/stopsNew.html',\n      controller: 'StopsNewController as stopsNew'\n    })\n    .state('stopsShow', {\n      url: '/stops/:id',\n      templateUrl: '/templates/stopsShow.html',\n      controller: 'StopsShowController as stopsShow'\n    })\n    .state('stopsEdit', {\n      url: '/stops/:id/edit',\n      templateUrl: '/templates/stopsEdit.html',\n      controller: 'StopsEditController as stopsEdit'\n    });\n\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('Stop', Stop);\n\nStop.$inject = ['$resource', 'API_URL'];\nfunction Stop($resource, API_URL) {\n  return new $resource(`${API_URL}/stops/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('StopsIndexController', StopsIndexController)\n  .controller('StopsShowController', StopsShowController)\n  .controller('StopsEditController', StopsEditController)\n  .controller('StopsNewController', StopsNewController);\n\n\n// SHOW ALL STOPS\nStopsIndexController.$inject = ['Stop'];\nfunction StopsIndexController(Stop) {\n  const stopsIndex = this;\n\n  stopsIndex.all = Stop.query();\n}\n\n// SHOW AN INDIVIDUAL STOP\nStopsShowController.$inject = ['Stop', '$state', '$auth'];\nfunction StopsShowController(Stop, $state, $auth) {\n  const stopsShow = this;\n\n  stopsShow.stop = Stop.get($state.params);\n\n  function deleteStop() {\n    stopsShow.stop.$remove(() => {\n      $state.go('stopsIndex');\n    });\n  }\n\n  stopsShow.delete = deleteStop;\n  stopsShow.isLoggedIn = $auth.isAuthenicated;\n\n}\n\n//CREATE NEW STOP\nStopsNewController.$inject = ['Stop', '$state'];\nfunction StopsNewController(Stop, $state) {\n  const stopsNew = this;\n  stopsNew.stop = {};\n  function create() {\n    Stop.save(stopsNew.stop, (stop) => {\n      $state.go('stopsShow', { id: stop.id });\n    });\n  }\n  stopsNew.create = create;\n}\n\n//EDIT A STOP\nStopsEditController.$inject = ['Stop', '$state'];\nfunction StopsEditController(Stop, $state) {\n  const stopsEdit = this;\n\n  stopsEdit.stop = Stop.get($state.params);\n\n  function update() {\n    stopsEdit.stop.$update(() => {\n      $state.go('stopsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenicated;\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('Walk', Walk);\n\nWalk.$inject = ['$resource', 'API_URL'];\nfunction Walk($resource, API_URL) {\n  return new $resource(`${API_URL}/walks/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('WalksIndexController', WalksIndexController)\n  .controller('WalksShowController', WalksShowController)\n  .controller('WalksEditController', WalksEditController)\n  .controller('WalksNewController', WalksNewController);\n\n\n// SHOW ALL WALKS\nWalksIndexController.$inject = ['Walk'];\nfunction WalksIndexController(Walk) {\n  const walksIndex = this;\n\n  walksIndex.all = Walk.query();\n}\n\n// SHOW AN INDIVIDUAL WALK\nWalksShowController.$inject = ['Walk', '$state', '$auth'];\nfunction WalksShowController(Walk, $state, $auth) {\n  const walksShow = this;\n\n  walksShow.walk = Walk.get($state.params);\n\n  function deleteWalk() {\n    walksShow.walk.$remove(() => {\n      $state.go('walksIndex');\n    });\n  }\n\n  walksShow.delete = deleteWalk;\n  walksShow.isLoggedIn = $auth.isAuthenicated;\n\n}\n\n//CREATE NEW WALK\nWalksNewController.$inject = ['Walk', '$state'];\nfunction WalksNewController(Walk, $state) {\n  const walksNew = this;\n  walksNew.walk = {};\n  function create() {\n    Walk.save(walksNew.walk, (walk) => {\n      $state.go('walksShow', { id: walk.id });\n    });\n  }\n  walksNew.create = create;\n}\n\n//EDIT A WALK\nWalksEditController.$inject = ['Walk', '$state'];\nfunction WalksEditController(Walk, $state) {\n  const walksEdit = this;\n\n  walksEdit.walk = Walk.get($state.params);\n\n  function update() {\n    walksEdit.walk.$update(() => {\n      $state.go('walksShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}
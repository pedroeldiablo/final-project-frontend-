{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/directives/googleMap.js","js/directives/googlePlace.js","js/directives/googleRoute.js","js/controllers/main.js","js/router.js","js/models/stop.js","js/controllers/stops.js","js/models/user.js","js/controllers/users.js","js/models/walk.js","js/controllers/walks.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","link","$scope","element","active","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","googleMap","$window","template","stop","map","google","maps","Map","center","lat","lng","zoom","scrollwheel","minZoom","styles","featureType","elementType","stylers","saturation","color","lightness","visibility","weight","infowindow","InfoWindow","$watch","place","latLng","marker","Marker","position","addListener","close","setContent","purpose","image","id","open","setCenter","getCenter","event","trigger","googlePlace","options","types","componentRestrictions","country","autocomplete","places","Autocomplete","getPlace","geometry","location","toJSON","google_place_id","place_id","place_name","name","place_address","googleRoute","walk","markers","waypoints","stops","directionsService","DirectionsService","directionsDisplay","DirectionsRenderer","setMap","getPosition","stopover","splice","route","origin","destination","length","travelMode","response","status","setDirections","MainController","$rootScope","User","logout","secureState","toState","toParams","main","message","isAuthenticated","protectedStates","includes","parseFloat","getPayload","toggleMenu","console","log","menuVisible","isLoggedIn","userId","currentUser","get","$on","Router","$stateProvider","$urlRouterProvider","state","url","controller","otherwise","Stop","$resource","update","method","StopsIndexController","filter","regex","RegExp","stopsIndex","queryString","test","description","username","all","query","StopsShowController","deleteStop","stopsShow","$remove","params","delete","isAuthenicated","StopsNewController","create","save","stopsNew","StopsEditController","stopsEdit","$update","UsersIndexController","usersIndex","UsersShowController","isCurrentUser","Number","deleteUser","usersShow","UsersEditController","usersEdit","Walk","WalksIndexController","walksIndex","WalksShowController","deleteWalk","walksShow","showCreateForm","formVisible","hideCreateForm","newStop","createStop","walk_id","showEditForm","formEditVisible","currentStop","stopContentVisible","hideEditForm","showStop","remove","reload","updateWalk","updatedStop","_id","walkId","WalksNewController","walksNew","WalksEditController","walksEdit","angular","module","constant","window","hostname","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', window.location.hostname === 'localhost' ? 'http://localhost:3000/api' : '//journal-maps-api.herokuapp.com/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n  // function authenticate(provider) {\n  //   $auth.authenticate(provider)\n  //     .then((res) => {\n  //       console.log(res);\n  //     });\n  // }\n\n  login.submit = submit;\n  // login.authenticate =authenticate;\n}\n","angular.module('finalProject')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n      element\n        .on('dragover', () => {\n          $scope.active= true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active= false;\n          $scope.$apply();\n        })\n        .on('drop', (e) => {\n          e.preventDefault();\n\n          const file = (e.target.files || e.dataTransfer.files)[0];\n\n          reader.readAsDataURL(file);\n        });\n    }\n\n  };\n}\n","angular.module('finalProject')\n.directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\">Google map here!</div>',\n    scope: {\n      stop: '='\n    },\n    link: function($scope, element) {\n\n      const map = new $window.google.maps.Map(element[0], {\n        center: { lat: 51.474191, lng: -0.0713257 },\n        zoom: 15,\n        scrollwheel: false,\n        minZoom: 3,\n        styles: [\n          {\n            'featureType': 'all',\n            'elementType': 'labels.text.fill',\n            'stylers': [\n              {\n                'saturation': 36\n              },\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 40\n              }\n            ]\n          },\n          {\n            'featureType': 'all',\n            'elementType': 'labels.text.stroke',\n            'stylers': [\n              {\n                'visibility': 'on'\n              },\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 16\n              }\n            ]\n          },\n          {\n            'featureType': 'all',\n            'elementType': 'labels.icon',\n            'stylers': [\n              {\n                'visibility': 'off'\n              }\n            ]\n          },\n          {\n            'featureType': 'administrative',\n            'elementType': 'geometry.fill',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 20\n              }\n            ]\n          },\n          {\n            'featureType': 'administrative',\n            'elementType': 'geometry.stroke',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              },\n              {\n                'weight': 1.2\n              }\n            ]\n          },\n          {\n            'featureType': 'landscape',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 20\n              }\n            ]\n          },\n          {\n            'featureType': 'poi',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 21\n              }\n            ]\n          },\n          {\n            'featureType': 'road.highway',\n            'elementType': 'geometry.fill',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              }\n            ]\n          },\n          {\n            'featureType': 'road.highway',\n            'elementType': 'geometry.stroke',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 29\n              },\n              {\n                'weight': 0.2\n              }\n            ]\n          },\n          {\n            'featureType': 'road.arterial',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 18\n              }\n            ]\n          },\n          {\n            'featureType': 'road.local',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 16\n              }\n            ]\n          },\n          {\n            'featureType': 'transit',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 19\n              }\n            ]\n          },\n          {\n            'featureType': 'water',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              }\n            ]\n          }\n        ]\n\n      });\n\n      const infowindow = new $window.google.maps.InfoWindow();\n\n      $scope.$watch('stop.$resolved', () => {\n        if($scope.stop.place) {\n          const latLng = {\n            lat: $scope.stop.place.lat,\n            lng: $scope.stop.place.lng\n          };\n\n          const marker = new $window.google.maps.Marker({\n            position: latLng,\n            map: map\n          });\n\n          marker.addListener('click', () => {\n            infowindow.close();\n            infowindow.setContent(`<h6 class=\"infoWindowText\">${$scope.stop.purpose}</h6><img src=\"${$scope.stop.image}\" class=\"infoWindowImg\"><a href=\"#/stops/${$scope.stop.id}\">See more about this stop</a><a href=\"#/users/${$scope.stop.user.id}\">See more about this user</a>\n        `);\n\n            infowindow.open(map, marker);\n\n          });\n\n          map.setCenter(latLng);\n        }\n      });\n      map.addListener('resize', function() {\n        var latLng = map.getCenter();\n        map.event.trigger(map, 'resize');\n        map.setCenter(latLng);\n      });\n\n    }\n  };\n}\n","angular.module('finalProject')\n.directive('googlePlace', googlePlace);\n\ngooglePlace.$inject = ['$window'];\n\nfunction googlePlace($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      stop: '='\n    },\n    link: function($scope, element) {\n      const options = {\n        types: [],\n        componentRestrictions: { country: 'GB' }\n      };\n\n      const autocomplete = new $window.google.maps.places.Autocomplete(element[0], options);\n\n      autocomplete.addListener('place_changed', () => {\n        const place = autocomplete.getPlace();\n        const latLng = place.geometry.location.toJSON();\n\n\n        $scope.stop.lat = latLng.lat;\n        $scope.stop.lng = latLng.lng;\n        $scope.stop.google_place_id = place.place_id;\n        $scope.stop.place_name = place.name;\n        $scope.stop.place_address = place.place_address;\n        $scope.$apply();\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n.directive('googleRoute', googleRoute);\n\ngoogleRoute.$inject = ['$window'];\nfunction googleRoute($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-route\"></div>',\n    scope: {\n      walk: '='\n    },\n    link: function($scope, element) {\n\n      let markers = [];\n      let waypoints = [];\n\n      const map = new $window.google.maps.Map(element[0], {\n        center: { lat: $scope.walk.stops[0].place.lat, lng: $scope.walk.stops[0].place.lng},\n        zoom: 15,\n        scrollwheel: false,\n        minZoom: 3,\n        styles: [\n          {\n            'featureType': 'all',\n            'elementType': 'labels.text.fill',\n            'stylers': [\n              {\n                'saturation': 36\n              },\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 40\n              }\n            ]\n          },\n          {\n            'featureType': 'all',\n            'elementType': 'labels.text.stroke',\n            'stylers': [\n              {\n                'visibility': 'on'\n              },\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 16\n              }\n            ]\n          },\n          {\n            'featureType': 'all',\n            'elementType': 'labels.icon',\n            'stylers': [\n              {\n                'visibility': 'off'\n              }\n            ]\n          },\n          {\n            'featureType': 'administrative',\n            'elementType': 'geometry.fill',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 20\n              }\n            ]\n          },\n          {\n            'featureType': 'administrative',\n            'elementType': 'geometry.stroke',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              },\n              {\n                'weight': 1.2\n              }\n            ]\n          },\n          {\n            'featureType': 'landscape',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 20\n              }\n            ]\n          },\n          {\n            'featureType': 'poi',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 21\n              }\n            ]\n          },\n          {\n            'featureType': 'road.highway',\n            'elementType': 'geometry.fill',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              }\n            ]\n          },\n          {\n            'featureType': 'road.highway',\n            'elementType': 'geometry.stroke',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 29\n              },\n              {\n                'weight': 0.2\n              }\n            ]\n          },\n          {\n            'featureType': 'road.arterial',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 18\n              }\n            ]\n          },\n          {\n            'featureType': 'road.local',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 16\n              }\n            ]\n          },\n          {\n            'featureType': 'transit',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 19\n              }\n            ]\n          },\n          {\n            'featureType': 'water',\n            'elementType': 'geometry',\n            'stylers': [\n              {\n                'color': '#000000'\n              },\n              {\n                'lightness': 17\n              }\n            ]\n          }\n        ]\n\n      });\n\n      const directionsService = new $window.google.maps.DirectionsService;\n      const directionsDisplay = new $window.google.maps.DirectionsRenderer;\n\n      directionsDisplay.setMap(map);\n\n      markers = $scope.walk.stops.map((stop) => {\n        return new $window.google.maps.Marker({\n          position: { lat: stop.place.lat, lng: stop.place.lng },\n          map: map\n        });\n      });\n\n      waypoints = markers.map((marker) => {\n        return {\n          location: marker.getPosition(),\n          stopover: true\n        };\n      });\n\n      waypoints.splice(0,1);\n      waypoints.splice(-1,1);\n\n      directionsService.route({\n        origin: markers[0].getPosition(),\n        destination: markers[markers.length-1].getPosition(),\n        waypoints: waypoints,\n        travelMode: 'WALKING'\n      }, (response, status) => {\n        if(status === 'OK') {\n          directionsDisplay.setDirections(response);\n        }\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .controller( 'MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction MainController($auth, $state, $rootScope, User) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  const protectedStates = ['usersEdit','usersIndex', 'usersShow', 'stopsNew', 'placesNew', 'walksNew', 'walksEdit', 'stopsEdit', 'walksEdit'];\n\n  function secureState(e, toState, toParams) {\n    main.message = null;\n    if((!$auth.isAuthenticated() && protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there';\n    }\n  }\n\n  if ($auth.isAuthenticated()) {\n    const userId = $auth.getPayload().id;\n    main.currentUser = User.get({id: userId});\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.menuVisible = false;\n\n  function toggleMenu() {\n    console.log('clicked');\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n\n  main.toggleMenu = toggleMenu;\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('walksIndex', {\n      url: '/walks',\n      templateUrl: '/templates/walksIndex.html',\n      controller: 'WalksIndexController as walksIndex'\n    })\n    .state('walksNew', {\n      url: '/walks/new',\n      templateUrl: '/templates/walksNew.html',\n      controller: 'WalksNewController as walksNew'\n    })\n    .state('walksShow', {\n      url: '/walks/:id',\n      templateUrl: '/templates/walksShow.html',\n      controller: 'WalksShowController as walksShow'\n    })\n    .state('walksEdit', {\n      url: '/walks/:id/edit',\n      templateUrl: '/templates/walksEdit.html',\n      controller: 'WalksEditController as walksEdit'\n    })\n    .state('stopsIndex', {\n      url: '/stops',\n      templateUrl: '/templates/stopsIndex.html',\n      controller: 'StopsIndexController as stopsIndex'\n    })\n    .state('stopsNew', {\n      url: '/stops/new',\n      templateUrl: '/templates/stopsNew.html',\n      controller: 'StopsNewController as stopsNew'\n    })\n    .state('stopsShow', {\n      url: '/stops/:id',\n      templateUrl: '/templates/stopsShow.html',\n      controller: 'StopsShowController as stopsShow'\n    })\n    .state('stopsEdit', {\n      url: '/stops/:id/edit',\n      templateUrl: '/templates/stopsEdit.html',\n      controller: 'StopsEditController as stopsEdit'\n    });\n\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('Stop', Stop);\n\nStop.$inject = ['$resource', 'API_URL'];\nfunction Stop($resource, API_URL) {\n  return new $resource(`${API_URL}/stops/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('StopsIndexController', StopsIndexController)\n  .controller('StopsShowController', StopsShowController)\n  .controller('StopsEditController', StopsEditController)\n  .controller('StopsNewController', StopsNewController);\n\n\n// SHOW ALL STOPS\nStopsIndexController.$inject = ['Stop'];\nfunction StopsIndexController(Stop) {\n  const stopsIndex = this;\n\n  stopsIndex.queryString = '';\n\n  function filter(stop) {\n    const regex = new RegExp(stopsIndex.queryString, 'i');\n    return regex.test(stop.purpose) || regex.test(stop.description) || regex.test(stop.place.name) ||regex.test(stop.user.username);\n  }\n\n  stopsIndex.filter = filter;\n  stopsIndex.all = Stop.query();\n}\n\n// SHOW AN INDIVIDUAL STOP\nStopsShowController.$inject = ['Stop', '$state', '$auth'];\nfunction StopsShowController(Stop, $state, $auth) {\n  const stopsShow = this;\n\n  stopsShow.stop = Stop.get($state.params);\n\n  function deleteStop() {\n    stopsShow.stop.$remove(() => {\n      $state.go('stopsIndex');\n    });\n  }\n\n  stopsShow.delete = deleteStop;\n  stopsShow.isLoggedIn = $auth.isAuthenicated;\n\n}\n\n//CREATE NEW STOP\nStopsNewController.$inject = ['Stop', '$state'];\nfunction StopsNewController(Stop, $state) {\n  const stopsNew = this;\n  stopsNew.stop = {};\n  function create() {\n    Stop.save(stopsNew.stop, (stop) => {\n      $state.go('stopsShow', { id: stop.id });\n    });\n  }\n  stopsNew.create = create;\n}\n\n//EDIT A STOP\nStopsEditController.$inject = ['Stop', '$state'];\nfunction StopsEditController(Stop, $state) {\n  const stopsEdit = this;\n\n  stopsEdit.stop = Stop.get($state.params);\n\n  function update() {\n    stopsEdit.stop.$update(() => {\n      $state.go('stopsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === Number($state.params.id);\n  }\n\n  usersShow.isCurrentUser = isCurrentUser;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenicated;\n\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('Walk', Walk);\n\nWalk.$inject = ['$resource', 'API_URL'];\nfunction Walk($resource, API_URL) {\n  return new $resource(`${API_URL}/walks/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('WalksIndexController', WalksIndexController)\n  // .controller('WalksFollowingController', WalksFollowingController)\n  .controller('WalksNewController', WalksNewController)\n  .controller('WalksShowController', WalksShowController)\n  .controller('WalksEditController', WalksEditController);\n  // .controller('UserWalksController', UserWalksController);\n\n\n\n// SHOW ALL WALKS\nWalksIndexController.$inject = ['Walk'];\nfunction WalksIndexController(Walk) {\n  const walksIndex = this;\n\n  walksIndex.queryString = '';\n\n  function filter(walk) {\n    const regex = new RegExp(walksIndex.queryString, 'i');\n    return regex.test(walk.name) || regex.test(walk.description)||regex.test(walk.user.username);\n  }\n\n  walksIndex.filter = filter;\n  walksIndex.all = Walk.query();\n}\n\n// SHOW AN INDIVIDUAL WALK\nWalksShowController.$inject = ['Walk', 'Stop', '$state', '$auth'];\nfunction WalksShowController(Walk, Stop, $state, $auth) {\n  const walksShow = this;\n  walksShow.formVisible = false;\n\n  // function isCurrentUser() {\n  //   return $auth.getPayload().id === Number($state.params.id);\n  // }\n  //\n  // walksShow.isCurrentUser = isCurrentUser;\n\n  function deleteWalk() {\n    walksShow.walk.$remove(() => {\n      $state.go('walksIndex');\n    });\n  }\n\n\n  walksShow.isLoggedIn = $auth.isAuthenicated;\n\n\n\n\n  walksShow.walk = Walk.get($state.params);\n  console.log(walksShow.walk);\n  // console.log(walksShow.walk.user.user_id);\n\n  //ADD STOP CONTROLLER\n  walksShow.newStop = {\n    walk_id: $state.params.id\n  };\n\n  function showCreateForm() {\n    walksShow.formVisible = true;\n  }\n\n  function hideCreateForm() {\n    walksShow.formVisible = false;\n    walksShow.newStop = {};\n  }\n\n  walksShow.showCreateForm = showCreateForm;\n  walksShow.hideCreateForm = hideCreateForm;\n\n  function createStop() {\n    walksShow.newStop.walk_id = $state.params.id;\n    console.log('passing in: ', $state.params.id, walksShow.newStop );\n\n    Stop.save(walksShow.newStop, () => {\n      walksShow.stop = {};\n      hideCreateForm();\n      walksShow.walk = Walk.get($state.params);\n    });\n  }\n\n  // EDIT STOP CONTROLLER\n  function showEditForm(stop) {\n    walksShow.formEditVisible = true;\n    walksShow.currentStop = stop;\n    walksShow.stopContentVisible = false;\n  }\n\n  function hideEditForm() {\n    walksShow.formEditVisible = false;\n  }\n\n  function hideStopContent() {\n    walksShow.stopContentVisible = false;\n  }\n\n  function showStop(stop) {\n    console.log('clicked!', stop);\n    showEditForm(stop);\n  }\n\n  // function deleteStop(stop) {\n  //   console.log('delete me', stop);\n  //   Stop.remove({ id: stop._id, walkId: $state.params.id }, () => {\n  //     $state.reload();\n  //     $state.go('walksShow', { id: walk._id });\n  //   });\n  // }\n\n  function deleteStop(stop) {\n    console.log('delete me', stop);\n    Stop.remove({ id: stop.id}, () => {\n      $state.reload();\n      // $state.go('walksShow', { id: walk._id });\n    });\n  }\n\n  // function deleteStop() {\n  //   walksShow.stop.$remove(() => {\n  //     $state.go('stopsIndex');\n  //   });\n  // }\n\n  walksShow.deleteStop = deleteStop;\n\n  // UPDATE WALK CONTROLLER WITH EDIT STOP\n  function updateWalk(updatedStop) {\n    Stop.update({ id: updatedStop._id, walkId: $state.params.id }, updatedStop);\n  }\n\n\n\n  // FOLLOW WALK\n  // function followWalk() {\n  //   walksShow.walk.followedBy.push(userId);\n  //\n  //   walksShow.walk.$update((walk) => {\n  //     console.log('succes, followed walk:', walk);\n  //     walksShow.following = true;\n  //   });\n  // }\n\n  // UN-FOLLOW WALK\n  // function unfollowWalk() {\n  //   const index = walksShow.walk.followedBy.indexOf(userId);\n  //   walksShow.walk.followedBy.splice(index,1);\n  //\n  //   walksShow.walk.$update((walk) => {\n  //     console.log('succes, unfollowed walk:', walk);\n  //     walksShow.following = false;\n  //   });\n  // }\n\n  // walksShow.unfollowWalk = unfollowWalk;\n  // walksShow.followWalk = followWalk;\n  walksShow.delete = deleteWalk;\n  walksShow.updateWalk = updateWalk;\n  walksShow.showEditForm = showEditForm;\n  walksShow.hideEditForm = hideEditForm;\n  walksShow.createStop = createStop;\n  walksShow.showStop = showStop;\n  // walksShow.showStopContent = showStopContent;\n  // walksShow.hideStopContent = hideStopContent;\n\n\n}\n\n\n//CREATE NEW WALK\nWalksNewController.$inject = ['Walk', '$state'];\nfunction WalksNewController(Walk, $state) {\n  const walksNew = this;\n  walksNew.walk = {};\n  function create() {\n    Walk.save(walksNew.walk, (walk) => {\n      $state.go('walksShow', { id: walk.id });\n    });\n  }\n  walksNew.create = create;\n}\n\n//EDIT A WALK\nWalksEditController.$inject = ['Walk', '$state'];\nfunction WalksEditController(Walk, $state) {\n  const walksEdit = this;\n\n  walksEdit.walk = Walk.get($state.params);\n\n  function update() {\n    walksEdit.walk.$update(() => {\n      $state.go('walksShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}
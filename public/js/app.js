"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function o(){e.signup(l.user).then(function(){t.go("login")})}var l=this;l.user={},l.submit=o}function LoginController(e,t){function o(){e.login(l.credentials).then(function(){t.go("usersShow")})}var l=this;l.credentials={},l.submit=o}function dragDrop(){var e=new FileReader;return{restrict:"E",replace:!0,templateUrl:"templates/dragDrop.html",scope:{base64:"="},link:function(t,o){t.base64=null,t.active=!1,e.onload=function(){t.base64=e.result,t.$apply()},o.on("dragover",function(){t.active=!0,t.$apply()}).on("dragover",function(e){e.preventDefault()}).on("dragleave",function(){t.active=!1,t.$apply()}).on("drop",function(t){t.preventDefault();var o=(t.target.files||t.dataTransfer.files)[0];e.readAsDataURL(o)})}}}function googleMap(e){return{restrict:"E",replace:!0,template:'<div class="google-map">Google map here!</div>',scope:{stop:"="},link:function(t,o){var l=new e.google.maps.Map(o[0],{center:{lat:51.474191,lng:-.0713257},zoom:15,scrollwheel:!1,minZoom:3,styles:[{featureType:"all",elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#000000"},{lightness:40}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#000000"},{lightness:16}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#000000"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#000000"},{lightness:17},{weight:1.2}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#000000"},{lightness:20}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#000000"},{lightness:21}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#000000"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#000000"},{lightness:29},{weight:.2}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#000000"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#000000"},{lightness:16}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#000000"},{lightness:19}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#000000"},{lightness:17}]}]}),r=new e.google.maps.InfoWindow;t.$watch("stop.$resolved",function(){t.stop.place&&!function(){var o={lat:t.stop.place.lat,lng:t.stop.place.lng},s=new e.google.maps.Marker({position:o,map:l});s.addListener("click",function(){r.close(),r.setContent('<h6 class="infoWindowText">'+t.stop.purpose+'</h6><img src="'+t.stop.image+'" class="infoWindowImg"><a href="#/stops/'+t.stop.id+'">See more about this stop</a><a href="#/users/'+t.stop.user.id+'">See more about this user</a>\n        '),r.open(l,s)}),l.setCenter(o)}()})}}}function googlePlace(e){return{restrict:"A",scope:{stop:"="},link:function(t,o){var l={types:[],componentRestrictions:{country:"GB"}},r=new e.google.maps.places.Autocomplete(o[0],l);r.addListener("place_changed",function(){var e=r.getPlace(),o=e.geometry.location.toJSON();t.stop.lat=o.lat,t.stop.lng=o.lng,t.stop.google_place_id=e.place_id,t.stop.place_name=e.name,t.stop.place_address=e.place_address,t.$apply()})}}}function googleRoute(e){return{restrict:"E",replace:!0,template:'<div class="google-route"></div>',scope:{walk:"="},link:function(t,o){var l=[],r=[],s=new e.google.maps.Map(o[0],{center:{lat:t.walk.stops[0].place.lat,lng:t.walk.stops[0].place.lng},zoom:15,scrollwheel:!1,minZoom:3,styles:[{featureType:"all",elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#000000"},{lightness:40}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#000000"},{lightness:16}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#000000"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#000000"},{lightness:17},{weight:1.2}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#000000"},{lightness:20}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#000000"},{lightness:21}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#000000"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#000000"},{lightness:29},{weight:.2}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#000000"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#000000"},{lightness:16}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#000000"},{lightness:19}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#000000"},{lightness:17}]}]}),n=new e.google.maps.DirectionsService,a=new e.google.maps.DirectionsRenderer;a.setMap(s),l=t.walk.stops.map(function(t){return new e.google.maps.Marker({position:{lat:t.place.lat,lng:t.place.lng},map:s})}),r=l.map(function(e){return{location:e.getPosition(),stopover:!0}}),r.splice(0,1),r.splice(-1,1),n.route({origin:l[0].getPosition(),destination:l[l.length-1].getPosition(),waypoints:r,travelMode:"WALKING"},function(e,t){"OK"===t&&a.setDirections(e)})}}}function MainController(e,t,o,l){function r(){e.logout().then(function(){t.go("login")})}function s(o,l,r){a.message=null,(!e.isAuthenticated()&&i.includes(l.name)||"usersEdit"===l.name&&parseFloat(r.id)!==e.getPayload().id)&&(o.preventDefault(),t.go("login"),a.message="You must be logged in to go there")}function n(){console.log("clicked"),a.menuVisible=!a.menuVisible}var a=this;a.isLoggedIn=e.isAuthenticated,a.message=null;var i=["usersEdit","usersIndex","usersShow","stopsNew","placesNew","walksNew","walksEdit","stopsEdit","walksEdit"];if(e.isAuthenticated()){var p=e.getPayload().id;a.currentUser=l.get({id:p})}o.$on("$stateChangeStart",s),a.menuVisible=!1,a.toggleMenu=n,a.logout=r}function Router(e,t){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("walksIndex",{url:"/walks",templateUrl:"/templates/walksIndex.html",controller:"WalksIndexController as walksIndex"}).state("walksNew",{url:"/walks/new",templateUrl:"/templates/walksNew.html",controller:"WalksNewController as walksNew"}).state("walksShow",{url:"/walks/:id",templateUrl:"/templates/walksShow.html",controller:"WalksShowController as walksShow"}).state("walksEdit",{url:"/walks/:id/edit",templateUrl:"/templates/walksEdit.html",controller:"WalksEditController as walksEdit"}).state("stopsIndex",{url:"/stops",templateUrl:"/templates/stopsIndex.html",controller:"StopsIndexController as stopsIndex"}).state("stopsNew",{url:"/stops/new",templateUrl:"/templates/stopsNew.html",controller:"StopsNewController as stopsNew"}).state("stopsShow",{url:"/stops/:id",templateUrl:"/templates/stopsShow.html",controller:"StopsShowController as stopsShow"}).state("stopsEdit",{url:"/stops/:id/edit",templateUrl:"/templates/stopsEdit.html",controller:"StopsEditController as stopsEdit"}),t.otherwise("/users")}function Stop(e,t){return new e(t+"/stops/:id",{id:"@id"},{update:{method:"PUT"}})}function StopsIndexController(e){function t(e){var t=new RegExp(o.queryString,"i");return t.test(e.purpose)||t.test(e.description)||t.test(e.place.name)||t.test(e.user.username)}var o=this;o.queryString="",o.filter=t,o.all=e.query()}function StopsShowController(e,t,o){function l(){r.stop.$remove(function(){t.go("stopsIndex")})}var r=this;r.stop=e.get(t.params),r.delete=l,r.isLoggedIn=o.isAuthenicated}function StopsNewController(e,t){function o(){e.save(l.stop,function(e){t.go("stopsShow",{id:e.id})})}var l=this;l.stop={},l.create=o}function StopsEditController(e,t){function o(){l.stop.$update(function(){t.go("stopsShow",t.params)})}var l=this;l.stop=e.get(t.params),this.update=o}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,o){function l(){return o.getPayload().id===Number(t.params.id)}function r(){s.user.$remove(function(){t.go("register")})}var s=this;s.isCurrentUser=l,s.user=e.get(t.params),s.delete=r,s.isLoggedIn=o.isAuthenicated}function UsersEditController(e,t){function o(){l.user.$update(function(){t.go("usersShow",t.params)})}var l=this;l.user=e.get(t.params),l.update=o}function Walk(e,t){return new e(t+"/walks/:id",{id:"@id"},{update:{method:"PUT"}})}function WalksIndexController(e){function t(e){var t=new RegExp(o.queryString,"i");return t.test(e.name)||t.test(e.description)||t.test(e.user.username)}var o=this;o.queryString="",o.filter=t,o.all=e.query()}function WalksShowController(e,t,o,l){function r(){return l.isAuthenticated()&&m.walk.$resolved&&l.getPayload().id===m.walk.user.id}function s(){m.walk.$remove(function(){o.go("walksIndex")})}function n(){m.formVisible=!0}function a(){m.formVisible=!1,m.newStop={}}function i(){m.newStop.walk_id=o.params.id,console.log("passing in: ",o.params.id,m.newStop),t.save(m.newStop,function(){m.stop={},a(),m.walk=e.get(o.params)})}function p(e){m.formEditVisible=!0,m.currentStop=e,m.stopContentVisible=!1}function u(){m.formEditVisible=!1}function c(e){console.log("clicked!",e),p(e)}function g(e){console.log("delete me",e),t.remove({id:e.id},function(){o.reload()})}function d(e){t.update({id:e._id,walkId:o.params.id},e)}var m=this;m.formVisible=!1,m.isCurrentUser=r,m.walk=e.get(o.params),m.newStop={walk_id:o.params.id},m.showCreateForm=n,m.hideCreateForm=a,m.delete=s,m.updateWalk=d,m.showEditForm=p,m.hideEditForm=u,m.createStop=i,m.showStop=c,m.deleteStop=g}function WalksNewController(e,t){function o(){e.save(l.walk,function(e){t.go("walksShow",{id:e.id})})}var l=this;l.walk={},l.create=o}function WalksEditController(e,t,o){function l(){r.walk.$update(function(){t.go("walksShow",t.params)})}var r=this;r.walk=e.query(),e.get(t.params).$promise.then(function(e){r.walk=e,r.walk.user.id!==o.getPayload().id&&t.go("walksIndex")}),r.update=l}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","localhost"===window.location.hostname?"http://localhost:3000/api":"//journal-maps-api.herokuapp.com/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").directive("dragDrop",dragDrop),angular.module("finalProject").directive("googleMap",googleMap),googleMap.$inject=["$window"],angular.module("finalProject").directive("googlePlace",googlePlace),googlePlace.$inject=["$window"],angular.module("finalProject").directive("googleRoute",googleRoute),googleRoute.$inject=["$window"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope","User"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("Stop",Stop),Stop.$inject=["$resource","API_URL"],angular.module("finalProject").controller("StopsIndexController",StopsIndexController).controller("StopsShowController",StopsShowController).controller("StopsEditController",StopsEditController).controller("StopsNewController",StopsNewController),StopsIndexController.$inject=["Stop"],StopsShowController.$inject=["Stop","$state","$auth"],StopsNewController.$inject=["Stop","$state"],StopsEditController.$inject=["Stop","$state"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").factory("Walk",Walk),Walk.$inject=["$resource","API_URL"],angular.module("finalProject").controller("WalksIndexController",WalksIndexController).controller("WalksNewController",WalksNewController).controller("WalksShowController",WalksShowController).controller("WalksEditController",WalksEditController),WalksIndexController.$inject=["Walk"],WalksShowController.$inject=["Walk","Stop","$state","$auth"],WalksNewController.$inject=["Walk","$state"],WalksEditController.$inject=["Walk","$state","$auth"];
//# sourceMappingURL=app.js.map
